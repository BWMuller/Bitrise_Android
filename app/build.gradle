/*
 * Copyright (c) 2018 stanwood Gmbh
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'project-report'
apply plugin: 'kotlin-android-extensions'


Properties properties = new Properties()
def propertiesFile = project.rootProject.file('local.properties')
if (propertiesFile.exists()) {
    properties.load(propertiesFile.newDataInputStream())
}
def bitriseApiToken = properties.getProperty('bitrise.api.token')

android {
    compileSdkVersion sdk_version
    defaultConfig {
        applicationId "io.stanwood.bitrise"
        minSdkVersion 21
        targetSdkVersion sdk_version
        versionCode 1
        versionName "1.3"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true

        buildConfigField "String", "BITRISE_API_BASE_URL", "\"https://api.bitrise.io/\""
        buildConfigField "int", "DEFAULT_PAGE_SIZE", "10"
        buildConfigField "int", "PAGE_LOAD_THRESHOLD", "2"
        buildConfigField "String", "BITRISE_API_TOKEN", properties.containsKey('bitrise.api.token')? "\"$bitriseApiToken\"" : "null"
        buildConfigField "String", "API_DATE_TIME_FORMAT", "\"yyyy-MM-dd'T'HH:mm:ss'Z'\""
        buildConfigField "long", "DOWNLOAD_STATUS_REFRESH_DELAY", "500L"
        manifestPlaceholders.appName = "@string/app_name"
    }
    kotlin {
        experimental {
            coroutines 'enable'
        }
    }
    androidExtensions {
        experimental = true
    }
    dataBinding {
        enabled = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    applicationVariants.all { variant ->
        final buildTypeName = variant.buildType.name
        final flavorName = variant.flavorName
        switch (buildTypeName) {
        // release is handled in defaultConfig, but could also be handled here
            case 'debug':
                variant.mergedFlavor.manifestPlaceholders.appName = "$buildNumber Bitrise Unofficial $flavorName $buildTypeName"
                break
        }
    }
}

dependencies {
    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-experimental-adapter:$retrofit_coroutines_adapter_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$retrofit_logging_interceptor"

    // Kotlin
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutines_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // Support
    implementation "com.android.support:appcompat-v7:$support_version"
    implementation "com.android.support:design:$support_version"
    implementation "com.android.support:animated-vector-drawable:$support_version"
    implementation "com.android.support:mediarouter-v7:$support_version"
    implementation "com.android.support.constraint:constraint-layout:$constraint_layout_version"
    implementation "com.android.support:support-v4:$support_version"
    implementation "com.android.support:recyclerview-v7:$support_version"

    // Glide
    implementation "com.github.bumptech.glide:glide:$glide"
    annotationProcessor "com.github.bumptech.glide:compiler:$glide"

    // Other
    implementation "com.jakewharton.timber:timber:$timber_version"
    implementation "org.ocpsoft.prettytime:prettytime:$pretty_time_version"
    implementation "joda-time:joda-time:$joda_version"
    implementation "org.koin:koin-android:$koin_version"

    kapt "com.android.databinding:compiler:$android_plugin_version"
    implementation 'android.arch.navigation:navigation-fragment:1.0.0-alpha02'
}
